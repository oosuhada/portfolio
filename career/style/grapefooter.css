        /* 섹션: TV 컨테이너를 페이지 중앙에 배치하는 역할 */
        .grape-footer-quote-section {
            position: relative;
            height: 70vh;
            width: 100%;
            padding: 100px 0 0px 0; 
            background-color: transparent;
            overflow: hidden;
        }
/* ========================================================== */
/* NEW: z-index를 관리하기 위한 상태 클래스 추가 */
/* ========================================================== */
.tv-container.tv-on-top {
    z-index: 9998; /* 다른 모든 요소를 덮을 수 있는 매우 높은 z-index */
}
/* TV 컨테이너: 기본 상태 */
.tv-container {
    position: relative;
    /* 다른 콘텐츠보다 위에 있도록 z-index 설정 */
    z-index: 1;
    width: 400px;
    height: 365px;
    margin: 0 auto; 
    background: linear-gradient(145deg, #333, #222);
    border-radius: 12px;
    border: 2px solid #1a1a1a;
    box-shadow: 0 12px 40px rgba(0,0,0,0.7), inset 0 4px 8px rgba(255,255,255,0.08), inset 0 -4px 8px rgba(0,0,0,0.5);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding-top: 25px;
    cursor: pointer;
    
    /* =========================================== */
    /* 핵심: 이 두 속성이 없거나 잘못되면 TV가 보이지 않습니다. */
    opacity: 1;
    visibility: visible;
    /* =========================================== */

    transition: opacity 0.5s, visibility 0.5s;
    transform: translate3d(0, 0, 0);
}

/* TV 컨테이너: 전체 화면 상태 (수정) */
.tv-container.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 0;
    border-width: 0;
    /* z-index는 .tv-on-top 클래스가 관리하므로 여기서 제거 */
    padding-top: 0; /* 패딩은 제거하고 flex 중앙 정렬 사용 */
    justify-content: center; /* 자식 요소를 수직 중앙 정렬 */
    cursor: default;
}
        /* TV 컨테이너: 전체 화면 상태 */
        .tv-container.fullscreen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 0;
            border-width: 0;
            z-index: 990;
            padding-top: 0;
            justify-content: center;
            cursor: default;
        }
        /* TV 스크린 영역 */
        .tv-screen-area {
            position: relative;
            width: 86.67%;
            height: 76.8%;
            background: #111;
            border-radius: 8px;
            box-shadow: inset 0 0 15px rgba(0,0,0,0.8);
            overflow: hidden;
            transition: width 1s, height 1s, border-radius 1s, margin-bottom 1s;
        }
        /* 전체 화면일 때의 스크린 스타일 */
        .tv-container.fullscreen .tv-screen-area {
            width: 100%;
            height: 100%;
            border-radius: 0;
            margin-bottom: 0;
        }
        /* TV가 전체화면일 때 섹션을 그대로 유지 */
.tv-container.fullscreen ~ footer {
  padding-top: 400px; /* TV 원본 높이만큼 유지하여 공간 확보 */
  transition: padding-top 1s ease; /* 부드럽게 전환 */
}
        /* TV 효과들 (Static, Glow, TurnOn 등) */
        .video-content,
        .static-effect,
        .scanlines,
        .screen-glow,
        .color-bars,
        .tv-turnon {
            opacity: 0;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            pointer-events: none;
        }
        .tv-turnon { 
            width: 0; 
            height: 2px; 
            top: 50%; 
            left: 50%; 
            transform: translate(-50%, -50%); 
            background: rgba(255, 255, 255, 0.9); 
        }
        .color-bars { 
            background: linear-gradient(90deg, #fff 14.28%, #ff0 28.56%, #0ff 42.84%, #0f0 57.12%, #f0f 71.4%, #f00 85.68%, #00f 100%); 
        }
        .scanlines {
            background: repeating-linear-gradient(0deg, transparent, transparent 2px, rgba(0, 0, 0, 0.2) 2px, rgba(0, 0, 0, 0.2) 3px);
        }
        .screen-glow {
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 120%;
            height: 120%;
            background: radial-gradient(circle, rgba(100, 180, 255, 0.15) 0%, transparent 70%);
        }
        .static-effect {
            overflow: hidden;
        }
        .noise-layer {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            mix-blend-mode: screen;
        }
        .noise-layer-1 { background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><filter id="noise1"><feTurbulence baseFrequency="0.9" numOctaves="4" stitchTiles="stitch"/><feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0"/></filter></defs><rect width="100%" height="100%" filter="url(%23noise1)" opacity="0.8"/></svg>'); background-size: 100px 100px; animation: staticMove1 0.1s infinite; }
        .noise-layer-2 { background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80"><defs><filter id="noise2"><feTurbulence baseFrequency="1.2" numOctaves="3" stitchTiles="stitch"/><feColorMatrix values="0 0 0 0 0.2 0 0 0 0 0.2 0 0 0 0 0.2 0 0 0 1 0"/></filter></defs><rect width="100%" height="100%" filter="url(%23noise2)" opacity="0.6"/></svg>'); background-size: 80px 80px; animation: staticMove2 0.07s infinite; }
        .noise-layer-3 { background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 120 120"><defs><filter id="noise3"><feTurbulence baseFrequency="0.7" numOctaves="5" stitchTiles="stitch"/><feColorMatrix values="0 0 0 0 0.1 0 0 0 0 0.1 0 0 0 0 0.1 0 0 0 1 0"/></filter></defs><rect width="100%" height="100%" filter="url(%23noise3)" opacity="0.4"/></svg>'); background-size: 120px 120px; animation: staticMove3 0.13s infinite; }
        @keyframes staticMove1 { from { transform: translate(0, 0); } to { transform: translate(-5px, 5px); } }
        @keyframes staticMove2 { from { transform: translate(0, 0); } to { transform: translate(5px, -5px); } }
        @keyframes staticMove3 { from { transform: translate(0, 0); } to { transform: translate(3px, 3px); } }
        /* 컨트롤 패널 및 버튼 */
        .tv-controls-panel {
            position: relative;
            display: flex;
            align-items: center;
            justify-content: flex-end;
            width: 90%;
            gap: 15px;
            margin-right: 25px;
            margin-top: 15px;
            margin-bottom: 30px;
        }
        .tv-dial { width: 28px; height: 28px; border-radius: 50%; background: linear-gradient(145deg, #666, #333); border: 2px solid #222; box-shadow: 0 2px 3px rgba(0,0,0,0.5), inset 0 1px 1px rgba(255,255,255,0.1); position: relative; }
        .tv-dial::after { content: ''; position: absolute; top: 3px; left: 50%; transform: translateX(-50%); width: 2px; height: 8px; background: #ccc; border-radius: 1px; }
        .tv-button { width: 15px; height: 15px; border-radius: 50%; background: radial-gradient(circle at 40% 40%, #999, #444); border: 1px solid #111; box-shadow: 0 1px 2px rgba(0,0,0,0.6), inset 0 1px 1px rgba(255,255,255,0.1); }
        /* 닫기 버튼 */
        #closeBtn {
            position: fixed;
            top: 30px;
            right: 30px;
            font-size: 2.5rem;
            color: white;
            background-color: rgba(0,0,0,0.5);
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            /* 전체 화면 TV(990)보다 높게 설정 */
            z-index: 991;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s, background-color 0.3s, transform 0.3s;
        }
        #closeBtn:hover {
            background-color: rgba(255, 0, 0, 0.7);
            transform: scale(1.1);
        }
        /* 포도 이미지 및 텍스트 */
        .footer-image-container {
            position: relative;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .grape-footer-img {
            display: block;
            width: 100%;      /* MODIFIED */
            height: 100%;     /* MODIFIED */
            object-fit: cover;/* MODIFIED */
        }
        .grape-footer-text {
            position: absolute;
            bottom: 10%;
            left: 50%;
            transform: translateX(-50%);
            width: 90%;
            text-align: center;
            font-size: 1.2rem;
            line-height: 1.4;
            color: #fff;
            background: rgba(0, 0, 0, 0.6);
            border-radius: 6px;
            padding: 0.8rem 1rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            z-index: 2;
            pointer-events: none;
            font-weight: 500;
            white-space: normal;
        }
        /* General footer background */
        footer {
            background-color: var(--dark-bg);
            /* TV 컨테이너보다 낮은 z-index로 설정 */
            z-index: 8; 
            position: relative;
            color: var(--dark-text);
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        body[data-theme="light"] footer {
            background-color: var(--light-bg);
            color: var(--light-text);
        }
        footer a {
            color: var(--dark-text);
            text-decoration: underline;
            transition: color 0.3s ease;
        }
        @media (max-width: 700px) {
            .grape-footer-quote-section {
                padding: 2.0rem 0.6rem 4rem 0.6rem;
                max-width: 96vw;
            }
            .grape-footer-text {
                font-size: 1.05rem;
            }
            .grape-footer-img.zoomed-in {
                width: 100%;
                transform: scale(1);
                max-width: 100%;
            }
        }
        body[data-theme='dark'] #lottie-container #lottie-inner-section {
          filter: invert(75%);
        }
        body[data-theme='light'] #lottie-container #lottie-inner-section {
          filter: none;
        }