body {
    margin: 0;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    /* 배경색을 그레이 계열에서 짙은 청록색 계열로 변경하여 신비로운 느낌 추가 */
    background-color: #1a2a3a;
    /* 은은한 그라데이션 추가 (선택 사항) */
    background: linear-gradient(135deg, #1a2a3a 0%, #2a3b4c 100%);
    overflow: hidden; /* 스크롤바 제거 */
}

.container {
    font-size: 8px;
    display: grid;
    /* 그리드 컬럼 수를 8로 늘려 더 넓은 패턴 생성 */
    --columns: 8;
    grid-template-columns: repeat(var(--columns), 1fr);
    /* 그리드 간격을 약간 늘려 시각적 분리 강조 */
    grid-gap: 0.5em;
    /* 전체 컨테이너를 약간 회전시켜 동적인 느낌 추가 (선택 사항) */
    transform: rotate(5deg);
}

.square {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    /* 내부 span 간의 간격 조정 */
    grid-gap: 0.15em;
    padding: 0.1em;
    /* 사각형 자체의 배경색 추가 (선택 사항) */
    background-color: rgba(0, 0, 0, 0.1);
    /* 사각형 테두리 둥글게 */
    border-radius: 10%;
}

.square span {
    display: block;
    /* 테두리 두께 유지 */
    border: 2.5em solid;
    /* 색상을 부드러운 파스텔 톤으로 변경 */
    color: #87CEEB; /* 하늘색 */
    /* 원형 유지 */
    border-radius: 50%;
    /* 초기 회전 각도 유지 */
    transform: rotate(calc(45deg + 90deg * 0));
    /* 애니메이션 속도 및 타이밍 함수 변경 */
    animation: rotation 3s cubic-bezier(0.68, -0.55, 0.27, 1.55) infinite; /* 바운스 효과 추가 */
    /* 각 span마다 다른 애니메이션 지연을 주어 더욱 불규칙하고 유기적인 움직임 연출 */
}

/* 각 사각형 내의 span에 개별적인 애니메이션 지연 적용 */
.square:nth-child(even) span {
    animation-delay: 0.5s;
}

.square:nth-child(3n) span {
    animation-delay: 0.2s;
}

.square:nth-child(5n) span {
    animation-delay: 0.8s;
}


@keyframes rotation {
    0% { transform: rotate(calc(45deg + 90deg * 0)); opacity: 1; }
    25% { transform: rotate(calc(45deg + 90deg * 1)); opacity: 0.8; }
    50% { transform: rotate(calc(45deg + 90deg * 2)); opacity: 1; }
    75% { transform: rotate(calc(45deg + 90deg * 3)); opacity: 0.8; }
    100% { transform: rotate(calc(45deg + 90deg * 4)); opacity: 1; }
}

.square span:nth-child(1),
.square span:nth-child(4) {
    /* 첫 번째와 네 번째 span의 테두리 색상 변경 */
    border-color: transparent currentColor currentColor transparent;
}

.square span:nth-child(2),
.square span:nth-child(3) {
    /* 두 번째와 세 번째 span의 테두리 색상 변경 및 애니메이션 방향 반전 */
    border-color: transparent currentColor currentColor transparent;
    animation-direction: reverse;
    /* 이 span들에 다른 색상을 적용하여 대비 강조 */
    color: #FFD700; /* 황금색 */
}

/* 특정 span에 더 독특한 색상 적용 (선택 사항) */
.square:nth-child(odd) span:nth-child(1) {
    color: #9370DB; /* 보라색 */
}
.square:nth-child(even) span:nth-child(2) {
    color: #FFA07A; /* 밝은 주황색 */
}